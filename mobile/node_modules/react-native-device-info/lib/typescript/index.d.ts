import { DeviceInfoModule } from 'react-native-device-info/lib/typescript/internal/privateTypes';
import type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState } from 'react-native-device-info/lib/typescript/internal/types';
export declare const getUniqueId: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getUniqueIdSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare function syncUniqueId(): Promise<string>;
export declare const getInstanceId: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getInstanceIdSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getSerialNumber: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getSerialNumberSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getAndroidId: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getAndroidIdSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getIpAddress: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getIpAddressSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const isCameraPresent: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isCameraPresentSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare function getMacAddress(): Promise<string>;
export declare function getMacAddressSync(): string;
export declare const getDeviceId: () => string;
export declare const getManufacturer: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getManufacturerSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getModel: () => string;
export declare const getBrand: () => string;
export declare const getSystemName: () => string;
export declare const getSystemVersion: () => string;
export declare const getBuildId: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getBuildIdSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getApiLevel: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getApiLevelSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getBundleId: () => string;
export declare const getInstallerPackageName: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getInstallerPackageNameSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getApplicationName: () => string;
export declare const getBuildNumber: () => string;
export declare const getVersion: () => string;
export declare function getReadableVersion(): string;
export declare const getDeviceName: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getDeviceNameSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getUsedMemory: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getUsedMemorySync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getUserAgent: () => Promise<string>;
export declare const getUserAgentSync: () => string;
export declare const getFontScale: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getFontScaleSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getBootloader: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getBootloaderSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getDevice: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getDeviceSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getDisplay: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getDisplaySync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getFingerprint: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getFingerprintSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getHardware: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getHardwareSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getHost: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getHostSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getHostNames: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, getHostNamesSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare const getProduct: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getProductSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getTags: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getTagsSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getType: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getTypeSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getBaseOs: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getBaseOsSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getPreviewSdkInt: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getPreviewSdkIntSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getSecurityPatch: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getSecurityPatchSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getCodename: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getCodenameSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getIncremental: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getIncrementalSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const isEmulator: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isEmulatorSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isTablet: () => boolean;
export declare const isLowRamDevice: () => boolean;
export declare const isDisplayZoomed: () => boolean;
export declare const isPinOrFingerprintSet: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isPinOrFingerprintSetSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare function hasNotch(): boolean;
export declare function hasDynamicIsland(): boolean;
export declare const hasGms: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, hasGmsSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const hasHms: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, hasHmsSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const getFirstInstallTime: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getFirstInstallTimeSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getInstallReferrer: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getInstallReferrerSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getLastUpdateTime: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getLastUpdateTimeSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getStartupTime: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getStartupTimeSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getCarrier: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string>>, getCarrierSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string>;
export declare const getTotalMemory: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getTotalMemorySync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getMaxMemory: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getMaxMemorySync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getTotalDiskCapacity: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getTotalDiskCapacitySync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare function getTotalDiskCapacityOld(): Promise<number>;
export declare function getTotalDiskCapacityOldSync(): number;
export declare const getFreeDiskStorage: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getFreeDiskStorageSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare function getFreeDiskStorageOld(): Promise<number>;
export declare function getFreeDiskStorageOldSync(): number;
export declare const getBatteryLevel: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getBatteryLevelSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare const getPowerState: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<Partial<PowerState>>>, getPowerStateSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Partial<PowerState>>;
export declare const isBatteryCharging: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isBatteryChargingSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare function isLandscape(): Promise<boolean>;
export declare function isLandscapeSync(): boolean;
export declare const isAirplaneMode: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isAirplaneModeSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const getDeviceType: () => string;
export declare const getDeviceTypeSync: () => string;
export declare const supportedAbis: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, supportedAbisSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare const supported32BitAbis: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, supported32BitAbisSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare const supported64BitAbis: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, supported64BitAbisSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare function hasSystemFeature(feature: string): Promise<boolean>;
export declare function hasSystemFeatureSync(feature: string): boolean;
export declare function isLowBatteryLevel(level: number): boolean;
export declare const getSystemAvailableFeatures: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, getSystemAvailableFeaturesSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare const isLocationEnabled: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isLocationEnabledSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isHeadphonesConnected: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isHeadphonesConnectedSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isWiredHeadphonesConnected: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isWiredHeadphonesConnectedSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isBluetoothHeadphonesConnected: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isBluetoothHeadphonesConnectedSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isMouseConnected: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isMouseConnectedSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const isKeyboardConnected: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<boolean>>, isKeyboardConnectedSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<boolean>;
export declare const getSupportedMediaTypeList: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<string[]>>, getSupportedMediaTypeListSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<string[]>;
export declare const isTabletMode: () => Promise<boolean>;
export declare const getAvailableLocationProviders: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<LocationProviderInfo>>, getAvailableLocationProvidersSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<LocationProviderInfo>;
export declare const getBrightness: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<Promise<number>>, getBrightnessSync: import("react-native-device-info/lib/typescript/internal/privateTypes").Getter<number>;
export declare function getDeviceToken(): Promise<string>;
export declare function useBatteryLevel(): number | null;
export declare function useBatteryLevelIsLow(): number | null;
export declare function usePowerState(): Partial<PowerState>;
export declare function useIsHeadphonesConnected(): AsyncHookResult<boolean>;
export declare function useIsWiredHeadphonesConnected(): AsyncHookResult<boolean>;
export declare function useIsBluetoothHeadphonesConnected(): AsyncHookResult<boolean>;
export declare function useFirstInstallTime(): AsyncHookResult<number>;
export declare function useDeviceName(): AsyncHookResult<string>;
export declare function useHasSystemFeature(feature: string): AsyncHookResult<boolean>;
export declare function useIsEmulator(): AsyncHookResult<boolean>;
export declare function useManufacturer(): AsyncHookResult<string>;
export declare function useBrightness(): number | null;
export type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };
declare const DeviceInfo: DeviceInfoModule;
export default DeviceInfo;
